paths:
  /roles:
    get:
      security:
        - Authorization: []
      tags:
        - "Roles"
      summary: Get the list of roles.
      parameters:
        - name: Authorization
          in: headers
          description: Id token to be provided to access.
          schema:
            type: string
        - name: search
          description: Search will be applied to role name.
          in: "query"
          required: false
          schema:
            type: string
            example: Admin
      responses:
        200:
          $ref: "#/components/responses/listRolesSuccess"
        401:
          $ref: "#/components/responses/unauthorizedRequest"
        403:
          $ref: "#/components/responses/forbiddenRequest"
        500:
          $ref: "#/components/responses/internalError"
    post:
      security:
        - Authorization: []
      tags:
        - "Roles"
      summary: To create a new role.
      parameters:
        - name: Authorization
          in: headers
          description: Id token to be provided to access.
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/addRoleRequestBody"
      responses:
        200:
          $ref: "#/components/responses/listRolesSuccess"
        400:
          $ref: "#/components/responses/addRoleBadRequest"
        401:
          $ref: "#/components/responses/unauthorizedRequest"
        403:
          $ref: "#/components/responses/forbiddenRequest"
        500:
          $ref: "#/components/responses/internalError"
  /roles/:id:
    delete:
      security:
        - Authorization: []
      tags:
        - "Roles"
      summary: To delete a new role.
      parameters:
        - name: Authorization
          in: headers
          description: Id token to be provided to access.
          schema:
            type: string
        - name: id
          in: path
          description: Role id to be provided to delete a particular role.
          schema:
            type: string
            example: r_1
      responses:
        200:
          $ref: "#/components/responses/deleteRolesSuccess"
        400:
          $ref: "#/components/responses/deleteRoleBadRequest"
        401:
          $ref: "#/components/responses/unauthorizedRequest"
        403:
          $ref: "#/components/responses/forbiddenRequest"
        500:
          $ref: "#/components/responses/internalError"
    patch:
      security:
        - Authorization: []
      tags:
        - "Roles"
      summary: To edit a role.
      parameters:
        - name: Authorization
          in: headers
          description: Id token to be provided to access.
          schema:
            type: string
        - name: id
          in: path
          description: Role id is to be provided to edit a particular role.
          schema:
            type: string
            example: r_1
      responses:
        200:
          $ref: "#/components/responses/editRolesSuccess"
        400:
          $ref: "#/components/responses/editRoleBadRequest"
        401:
          $ref: "#/components/responses/unauthorizedRequest"
        403:
          $ref: "#/components/responses/forbiddenRequest"
        500:
          $ref: "#/components/responses/internalError"
