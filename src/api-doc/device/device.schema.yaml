components:
  schemas:
    listDeviceTypes:
      description: 'listDeviceTypes'
      type: object
      properties:
        type:
          type: string
          example: CAR
        model_count:
          type: integer
          example: 3
        version_count:
          type: integer
          example: 3
        variant_count:
          type: integer
          example: 3
    versionList:
      description: 'variantList'
      type: object
      properties:
        id:
          type: string
          example: m_1
        name:
          type: string
          example: ev
        status:
          type: string
          example: 'ACTIVE'
    variantList:
      description: 'variantList'
      type: object
      properties:
        id:
          type: string
          example: m_1
        name:
          type: string
          example: ev
        status:
          type: string
          example: 'ACTIVE'
        versions:
          type: array
          items:
            $ref: '#/components/schemas/versionList'
    listDevices:
      description: 'list device based on type'
      type: object
      properties:
        model:
          type: object
          properties:
            id:
              type: string
              example: m_1
            name:
              type: string
              example: nexon
            status:
              type: string
              example: 'ACTIVE'
            variants:
              type: array
              items:
                $ref: '#/components/schemas/variantList'
    personalityPrivileges:
      description: 'personality details'
      type: object
      properties:
        action_id:
          type: integer
          example: 1
        action_name:
          type: string
          example: turn on
        category_id:
          type: integer
          example: 1
        effective_level:
          type: string
          example: 'version'
        action_identifier:
          type: string
          example: 'AC_TURN_ON'
        effective_level_id:
          type: string
          example: 'ver_2'

    getPersonalityDetails:
      description: 'personality details'
      type: object
      properties:
        name:
          type: string
          example: OWNER
        privileges:
          type: array
          items:
            $ref: '#/components/schemas/personalityPrivileges'

  securitySchemes:
    Authorization:
      type: apiKey
      in: header
      name: Authorization

  responses:
    listDeviceTypesSuccess:
      description: 'Success'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              data:
                type: object
                properties:
                  device_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/listDeviceTypes'
              message:
                type: string
                example: 'data fetched successful'
    listDevicesSuccess:
      description: 'Success'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              data:
                type: object
                properties:
                  devices:
                    type: array
                    items:
                      $ref: '#/components/schemas/listDevices'
              message:
                type: string
                example: 'devices fetched successfully'
    listDeviceBadRequest:
      description: 'Bad Request'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 400
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'Invalid device type CAR'
    editDevicesSuccess:
      description: 'Success'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'Devices edited successfully'
    editDeviceBadRequest:
      description: 'Bad Request'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 400
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'Unable to perform edit operation for device details'
          examples:
            example1:
              summary: 400 - Invalid status
              value:
                code: 400
                data: {}
                message: 'status should be present and it must be an string'
            example2:
              summary: 400 - Invalid type
              value:
                code: 400
                data: {}
                message: 'type should be present and it must be an string'
            example3:
              summary: 400 - Invalid privileges
              value:
                code: 400
                data: {}
                message: 'privileges should be present and it must be an string'
            example4:
              summary: 400 - Model missing
              value:
                code: 400
                data: {}
                message: 'Model Id must be passed.'
            example5:
              summary: 400 - Unable to perform edit operation
              value:
                code: 400
                data: {}
                message: 'Unable to perform edit operation for device details.'
            example6:
              summary: 400 - Invalid model id type
              value:
                code: 400
                data: {}
                message: 'Model id should be of type string and should start with m_.'
            example7:
              summary: 400 - Invalid Variant id type
              value:
                code: 400
                data: {}
                message: 'Variant id should be of type string and should start with va_ .'
            example8:
              summary: 400 - Invalid version id type
              value:
                code: 400
                data: {}
                message: 'Version id should be of type string and should start with ver_ .'
            example9:
              summary: 400 - Invalid Category id type
              value:
                code: 400
                data: {}
                message: 'Category id must be present in privileges and it must be integer.'
    getPersonalityDetailsSuccess:
      description: 'Success'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              data:
                type: object
                properties:
                  personalities:
                    type: array
                    items:
                      $ref: '#/components/schemas/getPersonalityDetails'
              message:
                type: string
                example: 'Devices edited successfully'
    getPersonalityDetailsBadRequest:
      description: 'Bad Request'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 400
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'Invalid model'
          examples:
            example1:
              summary: 400 - Invalid model
              value:
                code: 400
                data: {}
                message: 'Invalid model'
            example2:
              summary: 400 - Invalid variant
              value:
                code: 400
                data: {}
                message: 'Invalid variant'
            example3:
              summary: 400 - Invalid version
              value:
                code: 400
                data: {}
                message: 'Invalid version'
    createDeviceLevelSuccess:
      description: 'Success'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              data:
                type: object
                properties:
                  model_id:
                    type: string
                    example: m_1
              message:
                type: string
                example: 'device created successfully'
    createDeviceLevelBadRequest:
      description: 'Bad Request'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 400
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'status should be present and it must be an string'
          examples:
            example1:
              summary: 400 - Invalid model type
              value:
                code: 400
                data: {}
                message: 'Model id should be of type string and should start with m_ '
            example2:
              summary: 400 - Invalid model type
              value:
                code: 400
                data: {}
                message: 'Model id should be of type string and should start with m_ '
            example3:
              summary: 400 - Invalid variant type
              value:
                code: 400
                data: {}
                message: 'Variant id should be of type string and should start with va_'
            example4:
              summary: 400 - Model id should be passed
              value:
                code: 400
                data: {}
                message: 'Model Id must be passed.'
    deviceDetailsSuccess:
      description: 'Success'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              data:
                type: object
                properties:
                  type:
                    type: string
                    example: CAR
                  model_name:
                    type: string
                    example: NEXON
                  model_id:
                    type: string
                    example: m_1
                  variant_name:
                    type: string
                    example: EV
                  variant_id:
                    type: string
                    example: va_1
                  version_name:
                    type: string
                    example: 2023
                  version_id:
                    type: string
                    example: ver_1
                  status:
                    type: string
                    example: ACTIVE
              message:
                type: string
                example: 'data fetched successfully'
    deviceDetailsNotFound:
      description: 'Not Found'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 404
              data:
                type: object
                properties:
                  type:
                    type: string
                    example: null
                  model_name:
                    type: string
                    example: null
                  variant_name:
                    type: string
                    example: null
                  version_name:
                    type: string
                    example: null
                  status:
                    type: string
                    example: null
              message:
                type: string
                example: 'Data not found with the given id'
    deviceExecuteSuccess:
      description: 'Success'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'Device communicated successfully'
    deviceExecuteNotFound:
      description: 'Not Found'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 404
              data:
                type: object
                example: {}
              message:
                type: string
                example: Action type not found
          examples:
            example1:
              summary: 404 - Action not Found
              value:
                code: 404
                data: {}
                message: 'Action type not found '
            example2:
              summary: 404 - Device not found
              value:
                code: 404
                data: {}
                message: 'Device not found'
    deviceExecuteBadRequest:
      description: 'Bad Request'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 400
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'Action is missing or action invalid'
          examples:
            example1:
              summary: 400 - Invalid action
              value:
                code: 400
                data: {}
                message: 'Action is missing or action invalid'
            example2:
              summary: 400 - Invalid device
              value:
                code: 400
                data: {}
                message: 'Device_id is missing or device_id invalid'
            example3:
              summary: 400 - Invalid parameter
              value:
                code: 400
                data: {}
                message: 'Parameters required for given action'
            example4:
              summary: 400 - Invalid parameter types
              value:
                code: 400
                data: {}
                message: 'Parameter not valid for given action'
    deviceExecutorUnauthorized:
      description: 'Unauthorized request'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 401
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'Something went wrong'
          examples:
            example1:
              summary: 401 - Something went wrong
              value:
                code: 401
                data: {}
                message: 'Something went wrong'
            example2:
              summary: 401 - No access
              value:
                code: 401
                data: {}
                message: 'Unauthorized to perform the operation'
    unauthorizedRequest:
      description: 'Unauthorized request'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 401
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'Something went wrong'
    forbiddenRequest:
      description: 'Forbidden request'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              data:
                type: object
              message:
                type: string
                example: 'Something went wrong'
          examples:
            example1:
              summary: 403 - Access Denied
              value:
                code: 403
                data: {}
                message: 'Access Denied'
            example2:
              summary: 403 - Something went wrong
              value:
                code: 403
                data: {}
                message: 'Something went wrong'
    internalError:
      description: 'Internal Server Error'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 500
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'Something went wrong'

  requestBodies:
    editDevices:
      description: Respective id to be provided to edit a particular level of device, i.e model_id to be provided to edit model or only variant_id to be provided for variant or version_id to be provided for version
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: tesla
              type:
                type: string
                example: CAR
              variant_id:
                type: string
                example: va_1
              privileges:
                type: array
                description: An array of privileges.
                items:
                  type: object
                  properties:
                    category_id:
                      type: integer
                      example: 1
                    actions:
                      type: array
                      description: An array of actions allowed for this privilege.
                      items:
                        type: integer
                        example: 1
                        description: The action allowed for this privilege.
    addDevices:
      description: Respective id to be provided to create a particular level of device, i.e model_id to be provided to create model or only variant_id to be provided for variant or version_id to be provided for version
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: tesla
              type:
                type: string
                example: CAR
              variant_id:
                type: string
                example: va_1
              privileges:
                type: array
                description: An array of privileges.
                items:
                  type: object
                  properties:
                    category_id:
                      type: integer
                      example: 1
                    actions:
                      type: array
                      description: An array of actions allowed for this privilege.
                      items:
                        type: integer
                        example: 1
                        description: The action allowed for this privilege.
    deviceExecutor:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                type: string
                example: AC#TURN_ON
              device_id:
                type: string
                example: 10
              parameters:
                type: object
                properties:
                  temperature:
                    type: integer
                    example: 10
