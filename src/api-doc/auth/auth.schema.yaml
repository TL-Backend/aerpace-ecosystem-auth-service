components:
  schemas:
    userProfile:
      description: 'profile'
      type: object
      properties:
        first_name:
          type: string
          example: aditya
        last_name:
          type: string
          example: chandra
        email:
          type: string
          example: aditya@tilicho.in
        phone_number:
          type: string
          example: 9090909090
        user_id:
          type: string
          example: u_1
        role_id:
          type: string
          example: r_1
        role_name:
          type: string
          example: admin
        profile_url:
          type: string
          example: null
        first_time_login:
          type: integer
          example: 0

  securitySchemes:
    Authorization:
      type: apiKey
      in: header
      name: Authorization

  responses:
    loginSuccess:
      description: 'Success'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              data:
                type: object
                properties:
                  id_token:
                    type: string
                    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidV8zIiwidXNlcl90eXBlIjoiVVNFUiIsInJvbGVfbmFtZSI6ImFkbWluIiwicm9sZV9pZCI6InJfMSIsInRva2VuX3R5cGUiOiJJRF9UT0tFTiIsImlhdCI6MTY5NjMyNTQzNSwiZXhwIjoxNjk2MzM5ODM1fQ.f-90A5K9Wp37j6amUtueNJEUME5X1CxNsgnfDR20u98'
                  refresh_token:
                    type: string
                    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidV8zIiwidXNlcl90eXBlIjoiVVNFUiIsInJvbGVfbmFtZSI6ImFkbWluIiwicm9sZV9pZCI6InJfMSIsInRva2VuX3R5cGUiOiJJRF9UT0tFTiIsImlhdCI6MTY5NjMyNTQzNSwiZXhwIjoxNjk2MzM5ODM1fQ.f-90A5K9Wp37j6amUtueNJEUME5X1CxNsgnfDR20u98'
                  profile:
                    $ref: '#/components/schemas/userProfile'
              message:
                type: string
                example: 'Login successful'
    loginUnauthorizedRequest:
      description: 'Unauthorized'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 401
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'Invalid credentials'
    loginBadRequest:
      description: 'Bad request'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                example: {}
              code:
                type: integer
                example: 400
              message:
                type: string
                example: Email required, Password required, App type required
    authForbiddenRequest:
      description: 'Forbidden request'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 403
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'Something went wrong'
    forgotPasswordSuccess:
      description: 'Success'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              data:
                type: object
                example: {}
              message:
                type: string
                example: Link to reset password is sent to your email
    forgotPasswordBadRequest:
      description: 'Bad request'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                example: {}
              code:
                type: integer
                example: 400
              message:
                type: string
                example: Email required
    resetPasswordSuccess:
      description: 'Success'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                example: {}
              code:
                type: integer
                example: 200
              message:
                type: string
                example: Password changed successfully
    resetPasswordBadRequest:
      description: 'Bad request'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                example: {}
              code:
                type: integer
                example: 400
              message:
                type: string
                example: password required
    refreshSuccess:
      description: 'Success'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id_token:
                    type: string
                    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidV8zIiwidXNlcl90eXBlIjoiVVNFUiIsInJvbGVfbmFtZSI6ImFkbWluIiwicm9sZV9pZCI6InJfMSIsInRva2VuX3R5cGUiOiJJRF9UT0tFTiIsImlhdCI6MTY5NjMyNTQzNSwiZXhwIjoxNjk2MzM5ODM1fQ.f-90A5K9Wp37j6amUtueNJEUME5X1CxNsgnfDR20u98'
              code:
                type: integer
                example: 200
              message:
                type: string
                example: Access token refreshed successfully
    internalError:
      description: 'Internal server error'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 500
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'Something went wrong'
    userNotFound:
      description: 'Data not found'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                example: {}
              code:
                type: integer
                example: 404
              message:
                type: string
                example: User not found
    somethingWentWrong:
      description: 'Bad request'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                example: {}
              code:
                type: integer
                example: 400
              message:
                type: string
                example: 'Something went wrong'
    UnauthorizedSomethingWentWrong:
      description: 'Unauthorized request'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                example: {}
              code:
                type: integer
                example: 401
              message:
                type: string
                example: 'Something went wrong'

  requestBodies:
    login:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: user@aerpace.in
              password:
                type: string
                example: aerpace@123
              app:
                type: string
                example: ADMIN_PORTAL
    forgotPassword:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: user@aerpace.in
    resetPassword:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              new_password:
                type: string
                example: newpassword@123
    refresh:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              refresh_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidV8xNSIsInRva2VuX3R5cGUiOiJSRUZSRVNIX1RPS0VOIiwiaWF0IjoxNjk1ODgzMzM0LCJleHAiOjE2OTU4ODMzOTR9.6ac7oHEGw_YgoAFel8Kn2Hix3HvNZKPL6HL0V2l-iQ4
    temporaryPasswordReset:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              new_password:
                type: string
                example: newpassword@123
