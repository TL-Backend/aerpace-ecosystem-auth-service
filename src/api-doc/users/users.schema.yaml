components:
  schemas:
    userRole:
      description: 'Role details.'
      type: object
      properties:
        role_name:
          type: string
          example: admin
        id:
          type: string
          example: r_24
    listUser:
      description: 'List user profile object.'
      type: object
      properties:
        first_name:
          type: string
          example: aditya
        last_name:
          type: string
          example: chandra
        email:
          type: string
          example: aditya@tilicho.in
        phone_number:
          type: string
          example: 9090909090
        country_code:
          type: string
          example: +91
        address:
          type: string
          example: Visakhapatnam
        pin_code:
          type: string
          example: 530022
        state:
          type: string
          example: andhra pradesh
        role:
          $ref: '#/components/schemas/userRole'
    addUser:
      description: 'Add user profile.'
      type: object
      properties:
        first_name:
          type: string
          example: aditya
        last_name:
          type: string
          example: chandra
        email:
          type: string
          example: aditya@tilicho.in
        phone_number:
          type: string
          example: 9090909090
        country_code:
          type: string
          example: +91
        address:
          type: string
          example: Visakhapatnam
        pin_code:
          type: string
          example: 530022
        state:
          type: string
          example: andhra pradesh
        user_type:
          type: string
          example: USER
        id:
          type: string
          example: u_1
    editUser:
      description: 'Edit user editable details.'
      type: object
      properties:
        first_name:
          type: string
          example: aditya
        last_name:
          type: string
          example: chandra
        email:
          type: string
          example: aditya@tilicho.in
        phone_number:
          type: string
          example: 9090909090
        country_code:
          type: string
          example: +91
        address:
          type: string
          example: Visakhapatnam
        pin_code:
          type: string
          example: 530022
        state:
          type: string
          example: andhra pradesh
    configData:    
      description: 'config data.'
      type: object
      properties:
        master_permissions:
          type: array
          items: 
            $ref: '#/components/schemas/permissionList'
        role:
          type: object
          properties:
            id:   
              type: string
              example: r_1
            role_name:  
              type: string
              example: super admin
            permissions_list:
              type: array
              example: [ "USERS_MANAGEMENT#USERS_TAB#TAB_LIST_VIEW"]
            permissions_tree:
              type: array
              items: 
                $ref: '#/components/schemas/permissionTreeList'     
    permissionTreeList:
      description: permissions tree of a roles
      type: object
      properties:
        name: 
          type: string
          exampe: user management
        pages:
          type: array
          items: 
            $ref: '#/components/schemas/pageOfPermissionsTreeList'
        features:
          type: array
          example: []
        identifier:
          type: string
          example: USERS_MANAGEMENT
              
    pageOfPermissionsTreeList:
      description: pages list for permissions tree of a roles
      type: object
      properties:
        name: 
          type: string
          exampe: users
        pages:
          type: array
          example: []
        features:
          items: 
            $ref: '#/components/schemas/featureList'
        identifier: 
          type: string
          example: USERS_MANAGEMENT#USERS_TAB

    permissionList:
      description: list of master permissions
      type: object
      properties:
        id: 
          type: integer
          example: 1
        name:
          type: string
          example: user management
        parent_id:
          type: integer
          example: 1
        identifier:
          type: string
          example: USERS_MANAGEMENT
        pages:
          type: array
          items:
            $ref: '#/components/schemas/pageList'
        features:
          type: array
          example: []
    featureList:
      description: list of pages
      type: object
      properties:
        id: 
          type: integer
          example: 1
        name:
          type: string
          example: List users
        parent_id:
          type: integer
          example: 1
        identifier:
          type: string
          example: USERS_MANAGEMENT#USERS_TAB#TAB_LIST_VIEW
    pageList:
      description: list of pages
      type: object
      properties:
        id: 
          type: integer
          example: 1
        name:
          type: string
          example: users
        parent_id:
          type: integer
          example: 1
        identifier:
          type: string
          example: USERS_MANAGEMENT#USERS_TAB
        pages: 
          type: array
          example: []
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureList'

  securitySchemes:
    Authorization:
      type: apiKey
      in: header
      name: Authorization
  responses:
    listUserSuccess:
      description: 'success'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              data:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/listUser'
                  total_count:
                    type: integer
                    example: 50
                  page_limit:
                    type: integer
                    example: 10
                  page_number:
                    type: integer
                    example: 1
                  total_pages:
                    type: integer
                    example: 7
              message:
                type: string
                example: 'User fetched successfully.'
    addUserSuccess:
      description: 'success'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              data:
                type: object
                $ref: '#/components/schemas/addUser'
              message:
                type: string
                example: 'User created successfully.'
    editUserSuccess:
      description: 'success'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              data:
                type: object
                $ref: '#/components/schemas/editUser'
              message:
                type: string
                example: 'User updated successfully.'
    configSuccess:
      description: 'success'
      content:
        application/json:
          schema:
            type: object
            properties:
              code: 
                type: integer
                example: 200
              data:
                type: object
                $ref: '#/components/schemas/configData'
              message:
                type: string
                example: Config files fetched successfully
    
    configDataNotFound:
      description: 'Data not found'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                example: {}
              code:
                type: integer
                example: 404
              message:
                type: string
                example: Pages or features not found.

    internalError:
      description: 'Internal server error'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 500
              data:
                type: object
                example: {}
              message:
                type: string
                example: 'Something went wrong.'
    forbiddenRequest:
      description: 'Forbidden request'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              data:
                type: object
              message:
                type: string
                example: 'Something went wrong'
          examples:
            example1:
              summary: 403 - Access Denied
              value:
                code: 403
                data: {}
                message: 'Access Denied'
            example2:
              summary: 403 - Something went wrong
              value:
                code: 403
                data: {}
                message: 'Something went wrong'
    userNotFound:
      description: 'Data not found'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                example: {}
              code:
                type: integer
                example: 404
              message:
                type: string
                example: User not found.
    addUserSomethingWentWrong:
      description: 'Bad request'
      content:
        application/json:
          examples:
            example1:
              summary: 400 - Invalid input fields
              value:
                code: 400
                data: {}
                message: 'Invalid input fields.'
            example2:
              summary: 400 - Invalid role_id
              value:
                code: 400
                data: {}
                message: 'Invalid role_id.'
            example3:
              summary: 400 - User already exists
              value:
                code: 400
                data: {}
                message: 'User already exists with this email.'
    editUserSomethingWentWrong:
      description: 'Bad request'
      content:
        application/json:
          examples:
            example1:
              summary: 400 - Invalid user
              value:
                code: 400
                data: {}
                message: 'Invalid user id.'
            example2:
              summary: 400 - Invalid role_id
              value:
                code: 400
                data: {}
                message: 'Invalid role_id.'
    UnauthorizedSomethingWentWrong:
      description: 'Unauthorized request'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                example: {}
              code:
                type: integer
                example: 401
              message:
                type: string
                example: Something went wrong.

  requestBodies:
    editUser:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              first_name:
                type: string
                example: aditya
              last_name:
                type: string
                example: chandra
              email:
                type: string
                example: aditya@tilicho.in
              phone_number:
                type: string
                example: '9090909090'
              role_id:
                type: string
                example: r_1
              country_code:
                type: string
                example: '+91'
              address:
                type: string
                example: Visakhapatnam
              pin_code:
                type: string
                example: '530022'
              state:
                type: string
                example: andhra pradesh
          examples:
            example1:
              summary: Success
              value:
                role_id: r_1
                first_name: praddep
                last_name: chandra
                email: pawan@tilicho.in
                phone_number: '9099090090'
                country_code: '+91'
                address: vizag
                pin_code: '530022'
                state: andhra pradesh
            example2:
              summary: Invalid role_id
              value:
                role_id: 1
                first_name: praddep
                last_name: chandra
                email: aditya@tilicho.in
                phone_number: '9099090090'
                country_code: '+91'
                address: vizag
                pin_code: '530022'
                state: andhra pradesh
    addUser:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              role_id:
                type: string
                example: r_4
              first_name:
                type: string
                example: aditya
              last_name:
                type: string
                example: chandra
              email:
                type: string
                example: aditya@tilicho.in
              phone_number:
                type: string
                example: '9090909090'
              country_code:
                type: string
                example: '+91'
              address:
                type: string
                example: Visakhapatnam
              pin_code:
                type: string
                example: '530022'
              state:
                type: string
                example: andhra pradesh
          examples:
            example1:
              summary: Success
              value:
                role_id: r_4
                first_name: praddep
                last_name: chandra
                email: pawan@tilicho.in
                phone_number: '9099090090'
                country_code: '+91'
                address: vizag
                pin_code: '530022'
                state: andhra pradesh
            example2:
              summary: User already exists
              value:
                role_id: r_4
                first_name: praddep
                last_name: chandra
                email: aditya@tilicho.in
                phone_number: '9099090090'
                country_code: '+91'
                address: vizag
                pin_code: '530022'
                state: andhra pradesh
            example3:
              summary: Invalid role_id
              value:
                role_id: 1
                first_name: praddep
                last_name: chandra
                email: aditya@tilicho.in
                phone_number: '9099090090'
                country_code: '+91'
                address: vizag
                pin_code: '530022'
                state: andhra pradesh
            example4:
              summary: Invalid input fields
              value:
                role_id: r_4
                first_name: praddep
                last_name: chandra
                phone_number: '9099090090'
                country_code: '+91'
                address: vizag
                pin_code: '530022'
                state: andhra pradesh